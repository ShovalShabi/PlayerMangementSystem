plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'org.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Hibernate Validator for Jakarta Bean Validation
    implementation 'org.hibernate.validator:hibernate-validator:8.0.0.Final'
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'

    // Spring Boot Starter Web (Tomcat by default)
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // MySQL JDBC driver
    runtimeOnly 'com.mysql:mysql-connector-j:8.3.0'

    // Spring Boot Starter Data JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // Spring Boot Starter Actuator
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // Spring Boot Starter Security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // H2 Database for testing and development
    implementation 'com.h2database:h2'

    // Lombok for reducing boilerplate code
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Development-only dependency for Docker Compose support
//    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'

    // Spring Boot Starter Test for testing support
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // Add Springdoc OpenAPI and Swagger UI
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'

    // Jakarta Expression Language (EL) implementation
    implementation 'org.glassfish:jakarta.el:4.0.2'
}

tasks.named('test') {
    useJUnitPlatform()
    jvmArgs += ['-Xshare:off']
}